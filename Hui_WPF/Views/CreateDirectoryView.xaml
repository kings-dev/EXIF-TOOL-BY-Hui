<!-- Hui_WPF/Views/CreateDirectoryView.xaml -->
<UserControl x:Class="Hui_WPF.Views.CreateDirectoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Hui_WPF.Views"
             xmlns:vm="clr-namespace:Hui_WPF.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="700" MinWidth="400"
             d:DataContext="{d:DesignInstance vm:CreateDirectoryViewModel}">
    <!-- Design-time DataContext -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="280" MaxWidth="400"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Row="0" Grid.Column="0" Padding="15"
                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                BorderThickness="0,0,1,0">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <TextBlock Text="创建目录设置" FontSize="18" FontWeight="SemiBold" Margin="0,0,0,15"/>
                    <TextBlock Text="目录名称将根据主窗口的&quot;全局设置&quot;中的命名规则生成。" TextWrapping="Wrap" Margin="0,0,0,10" Foreground="Gray"/>

                    <TextBlock Text="根目录路径：" Margin="0,5,0,2"/>
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- Bind TextBox Text property to ViewModel property -->
                        <TextBox x:Name="BasePathBox_View" Text="{Binding BasePath, UpdateSourceTrigger=PropertyChanged}" ToolTip="选择或粘贴根目录路径" VerticalContentAlignment="Center" Padding="3,0"/>
                        <!-- Bind Button Command property to ViewModel command -->
                        <Button x:Name="btnSelectBasePath_View" Grid.Column="1" Content="浏览..." Command="{Binding SelectBasePathCommand}" Style="{DynamicResource BaseButtonStyle}" Margin="5,0,0,0" Padding="8,3"/>
                    </Grid>

                    <TextBlock Text="主目录创建数量:" Margin="0,5,0,2"/>
                    <!-- Bind TextBox Text property to ViewModel property -->
                    <!-- Use StringFormat or a Converter if needed for integer binding -->
                    <TextBox x:Name="txtMainDirectoryCount_View" Text="{Binding MainDirectoryCount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0}}" Margin="0,0,0,10" VerticalContentAlignment="Center" Padding="3,0"/>

                    <TextBlock Text="子目录创建数量 (每个主目录下):" Margin="0,5,0,2"/>
                    <!-- Bind TextBox Text property to ViewModel property -->
                    <TextBox x:Name="txtSubdirectoryCount_View" Text="{Binding SubdirectoryCount, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0}}" Margin="0,0,0,10" VerticalContentAlignment="Center" Padding="3,0"/>

                    <!-- Bind CheckBox IsChecked property to ViewModel property -->
                    <CheckBox x:Name="RecursiveCheck_View" Content="为每个主目录创建子目录(按规则命名)" IsChecked="{Binding CreateSubdirectories, Mode=TwoWay}" Margin="0,10,0,15"/>

                    <TextBlock Text="配置完成后，请使用右侧面板的&quot;开始处理&quot;按钮。" FontStyle="Italic" Foreground="Gray" Margin="0,20,0,0" TextWrapping="Wrap"/>

                </StackPanel>
            </ScrollViewer>
        </Border>

        <GridSplitter Grid.Row="0" Grid.Column="1" Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="LightGray" ShowsPreview="True"/>

        <!-- 两个预览区域：源结构和目录结构 -->
        <StackPanel Grid.Row="0" Grid.Column="2" Margin="5,0,0,0">
            <GroupBox Header="源结构预览" Margin="0,0,0,10" Padding="10">
                <TreeView BorderThickness="0" ItemsSource="{Binding SourcePreviewNodes}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            <Setter Property="Padding" Value="2,1"/>
                            <Setter Property="Margin" Value="0,1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Header}"/>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </GroupBox>
            <GroupBox Header="目录结构预览 (基于全局命名设置)" Padding="10">
                <TreeView BorderThickness="0" ItemsSource="{Binding PreviewNodes}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                            <Setter Property="Padding" Value="2,1"/>
                            <Setter Property="Margin" Value="0,1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsError}" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Header}"/>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </GroupBox>
        </StackPanel>
    </Grid>
</UserControl>