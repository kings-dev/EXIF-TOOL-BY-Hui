<!-- Hui_WPF/Views/GenerateAnimationView.xaml -->
<UserControl x:Class="Hui_WPF.Views.GenerateAnimationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Hui_WPF.Views"
             xmlns:vm="clr-namespace:Hui_WPF.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="600"
             d:DataContext="{d:DesignInstance vm:GenerateAnimationViewModel}">
    <!-- Design-time DataContext -->

    <UserControl.Resources>
        <Thickness x:Key="ControlMargin">0,4,0,4</Thickness>
        <Thickness x:Key="SectionMargin">0,10,0,5</Thickness>
        <Style TargetType="Label">
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="SliderValueStyle">
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="45"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="Height" Value="26"/>
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Margin" Value="{StaticResource ControlMargin}"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Margin" Value="0,15,0,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Padding="15">
        <StackPanel>
            <TextBlock Text="生成动画设置" FontSize="18" FontWeight="SemiBold" Margin="0,0,0,15"/>
            <TextBlock Text="将选定的图片序列合成为动画文件 (例如 GIF, APNG)。" TextWrapping="Wrap" Margin="0,0,0,15" Foreground="Gray"/>

            <Label Content="动画文件名 (不含扩展名):" Margin="{StaticResource SectionMargin}"/>
            <!-- Bind Text to ViewModel property -->
            <TextBox x:Name="txtAnimationFileName_AnimView" Text="{Binding AnimationFileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <Label Content="每帧延迟 (毫秒):" Margin="{StaticResource SectionMargin}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!-- Bind Slider Value to ViewModel property -->
                <Slider Grid.Column="0" x:Name="sliderAnimationDelay_AnimView" Minimum="10" Maximum="2000" Value="{Binding FrameDelayMs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TickFrequency="10" IsSnapToTickEnabled="True" />
                <!-- Bind TextBlock Text to Slider Value -->
                <TextBlock Grid.Column="1" Style="{StaticResource SliderValueStyle}" Text="{Binding Value, ElementName=sliderAnimationDelay_AnimView, StringFormat={}{0:F0} ms}" />
            </Grid>

            <Label Content="动画格式:" Margin="{StaticResource SectionMargin}"/>
            <!-- Bind SelectedItem to ViewModel property -->
            <!-- Consider using EnumToBooleanConverter with RadioButtons for format selection if more than 2 options and need explicit grouping -->
            <ComboBox x:Name="cmbAnimationFormat_AnimView" SelectedItem="{Binding SelectedFormat, Mode=TwoWay}">
                <ComboBoxItem Content="GIF"/>
                <ComboBoxItem Content="APNG (动画 PNG)" IsEnabled="False" ToolTip="暂不支持APNG"/>
                <!-- Disable unsupported format -->
                <ComboBoxItem Content="WebP (动画 WebP)" IsEnabled="False" ToolTip="暂不支持动画WebP"/>
                <!-- Disable unsupported format -->
            </ComboBox>

            <!-- Bind IsChecked to ViewModel property -->
            <CheckBox x:Name="chkLoopAnimation_AnimView" Content="循环播放" IsChecked="{Binding LoopAnimation, Mode=TwoWay}"/>
            <TextBlock Text="(对于 GIF, 0 表示无限循环)" FontSize="10" Foreground="Gray" Margin="20,0,0,5"/>

        </StackPanel>
    </ScrollViewer>
</UserControl>